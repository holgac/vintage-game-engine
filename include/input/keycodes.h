/*
	This file is part of Vintage Game Engine.
	Vintage Game Engine is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Vintage Game Engine is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Vintage Game Engine.  If not, see <http://www.gnu.org/licenses/>.
*/
#include <SDL2/SDL.h>
#define VGE_INPUT_KEY_COUNT 512
#define VGE_REGULAR_KEY_END 256
typedef enum {
  VGEINPUT_KEY_UNKNOWN = SDLK_UNKNOWN,
  VGEINPUT_KEY_RETURN = SDLK_RETURN,
  VGEINPUT_KEY_ESCAPE = SDLK_ESCAPE,
  VGEINPUT_KEY_BACKSPACE = SDLK_BACKSPACE,
  VGEINPUT_KEY_TAB = SDLK_TAB,
  VGEINPUT_KEY_SPACE = SDLK_SPACE,
  VGEINPUT_KEY_EXCLAIM = SDLK_EXCLAIM,
  VGEINPUT_KEY_QUOTEDBL = SDLK_QUOTEDBL,
  VGEINPUT_KEY_HASH = SDLK_HASH,
  VGEINPUT_KEY_PERCENT = SDLK_PERCENT,
  VGEINPUT_KEY_DOLLAR = SDLK_DOLLAR,
  VGEINPUT_KEY_AMPERSAND = SDLK_AMPERSAND,
  VGEINPUT_KEY_QUOTE = SDLK_QUOTE,
  VGEINPUT_KEY_LEFTPAREN = SDLK_LEFTPAREN,
  VGEINPUT_KEY_RIGHTPAREN = SDLK_RIGHTPAREN,
  VGEINPUT_KEY_ASTERISK = SDLK_ASTERISK,
  VGEINPUT_KEY_PLUS = SDLK_PLUS,
  VGEINPUT_KEY_COMMA = SDLK_COMMA,
  VGEINPUT_KEY_MINUS = SDLK_MINUS,
  VGEINPUT_KEY_PERIOD = SDLK_PERIOD,
  VGEINPUT_KEY_SLASH = SDLK_SLASH,
  VGEINPUT_KEY_0 = SDLK_0,
  VGEINPUT_KEY_1 = SDLK_1,
  VGEINPUT_KEY_2 = SDLK_2,
  VGEINPUT_KEY_3 = SDLK_3,
  VGEINPUT_KEY_4 = SDLK_4,
  VGEINPUT_KEY_5 = SDLK_5,
  VGEINPUT_KEY_6 = SDLK_6,
  VGEINPUT_KEY_7 = SDLK_7,
  VGEINPUT_KEY_8 = SDLK_8,
  VGEINPUT_KEY_9 = SDLK_9,
  VGEINPUT_KEY_COLON = SDLK_COLON,
  VGEINPUT_KEY_SEMICOLON = SDLK_SEMICOLON,
  VGEINPUT_KEY_LESS = SDLK_LESS,
  VGEINPUT_KEY_EQUALS = SDLK_EQUALS,
  VGEINPUT_KEY_GREATER = SDLK_GREATER,
  VGEINPUT_KEY_QUESTION = SDLK_QUESTION,
  VGEINPUT_KEY_AT = SDLK_AT,
  VGEINPUT_KEY_LEFTBRACKET = SDLK_LEFTBRACKET,
  VGEINPUT_KEY_BACKSLASH = SDLK_BACKSLASH,
  VGEINPUT_KEY_RIGHTBRACKET = SDLK_RIGHTBRACKET,
  VGEINPUT_KEY_CARET = SDLK_CARET,
  VGEINPUT_KEY_UNDERSCORE = SDLK_UNDERSCORE,
  VGEINPUT_KEY_BACKQUOTE = SDLK_BACKQUOTE,
  VGEINPUT_KEY_A = SDLK_a,
  VGEINPUT_KEY_B = SDLK_b,
  VGEINPUT_KEY_C = SDLK_c,
  VGEINPUT_KEY_D = SDLK_d,
  VGEINPUT_KEY_E = SDLK_e,
  VGEINPUT_KEY_F = SDLK_f,
  VGEINPUT_KEY_G = SDLK_g,
  VGEINPUT_KEY_H = SDLK_h,
  VGEINPUT_KEY_I = SDLK_i,
  VGEINPUT_KEY_J = SDLK_j,
  VGEINPUT_KEY_K = SDLK_k,
  VGEINPUT_KEY_L = SDLK_l,
  VGEINPUT_KEY_M = SDLK_m,
  VGEINPUT_KEY_N = SDLK_n,
  VGEINPUT_KEY_O = SDLK_o,
  VGEINPUT_KEY_P = SDLK_p,
  VGEINPUT_KEY_Q = SDLK_q,
  VGEINPUT_KEY_R = SDLK_r,
  VGEINPUT_KEY_S = SDLK_s,
  VGEINPUT_KEY_T = SDLK_t,
  VGEINPUT_KEY_U = SDLK_u,
  VGEINPUT_KEY_V = SDLK_v,
  VGEINPUT_KEY_W = SDLK_w,
  VGEINPUT_KEY_X = SDLK_x,
  VGEINPUT_KEY_Y = SDLK_y,
  VGEINPUT_KEY_Z = SDLK_z,
  VGEINPUT_KEY_CAPSLOCK = ((SDLK_CAPSLOCK ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F1 = ((SDLK_F1 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F2 = ((SDLK_F2 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F3 = ((SDLK_F3 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F4 = ((SDLK_F4 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F5 = ((SDLK_F5 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F6 = ((SDLK_F6 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F7 = ((SDLK_F7 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F8 = ((SDLK_F8 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F9 = ((SDLK_F9 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F10 = ((SDLK_F10 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F11 = ((SDLK_F11 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F12 = ((SDLK_F12 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PRINTSCREEN = ((SDLK_PRINTSCREEN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_SCROLLLOCK = ((SDLK_SCROLLLOCK ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PAUSE = ((SDLK_PAUSE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_INSERT = ((SDLK_INSERT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_HOME = ((SDLK_HOME ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PAGEUP = ((SDLK_PAGEUP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_DELETE = ((SDLK_DELETE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_END = ((SDLK_END ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PAGEDOWN = ((SDLK_PAGEDOWN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RIGHT = ((SDLK_RIGHT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_LEFT = ((SDLK_LEFT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_DOWN = ((SDLK_DOWN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_UP = ((SDLK_UP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_NUMLOCKCLEAR = ((SDLK_NUMLOCKCLEAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_DIVIDE = ((SDLK_KP_DIVIDE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MULTIPLY = ((SDLK_KP_MULTIPLY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MINUS = ((SDLK_KP_MINUS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_PLUS = ((SDLK_KP_PLUS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_ENTER = ((SDLK_KP_ENTER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_1 = ((SDLK_KP_1 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_2 = ((SDLK_KP_2 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_3 = ((SDLK_KP_3 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_4 = ((SDLK_KP_4 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_5 = ((SDLK_KP_5 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_6 = ((SDLK_KP_6 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_7 = ((SDLK_KP_7 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_8 = ((SDLK_KP_8 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_9 = ((SDLK_KP_9 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_0 = ((SDLK_KP_0 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_PERIOD = ((SDLK_KP_PERIOD ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_APPLICATION = ((SDLK_APPLICATION ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_POWER = ((SDLK_POWER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_EQUALS = ((SDLK_KP_EQUALS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F13 = ((SDLK_F13 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F14 = ((SDLK_F14 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F15 = ((SDLK_F15 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F16 = ((SDLK_F16 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F17 = ((SDLK_F17 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F18 = ((SDLK_F18 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F19 = ((SDLK_F19 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F20 = ((SDLK_F20 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F21 = ((SDLK_F21 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F22 = ((SDLK_F22 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F23 = ((SDLK_F23 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_F24 = ((SDLK_F24 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_EXECUTE = ((SDLK_EXECUTE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_HELP = ((SDLK_HELP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_MENU = ((SDLK_MENU ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_SELECT = ((SDLK_SELECT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_STOP = ((SDLK_STOP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AGAIN = ((SDLK_AGAIN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_UNDO = ((SDLK_UNDO ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CUT = ((SDLK_CUT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_COPY = ((SDLK_COPY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PASTE = ((SDLK_PASTE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_FIND = ((SDLK_FIND ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_MUTE = ((SDLK_MUTE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_VOLUMEUP = ((SDLK_VOLUMEUP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_VOLUMEDOWN = ((SDLK_VOLUMEDOWN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_COMMA = ((SDLK_KP_COMMA ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_EQUALSAS400 = ((SDLK_KP_EQUALSAS400 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_ALTERASE = ((SDLK_ALTERASE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_SYSREQ = ((SDLK_SYSREQ ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CANCEL = ((SDLK_CANCEL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CLEAR = ((SDLK_CLEAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_PRIOR = ((SDLK_PRIOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RETURN2 = ((SDLK_RETURN2 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_SEPARATOR = ((SDLK_SEPARATOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_OUT = ((SDLK_OUT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_OPER = ((SDLK_OPER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CLEARAGAIN = ((SDLK_CLEARAGAIN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CRSEL = ((SDLK_CRSEL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_EXSEL = ((SDLK_EXSEL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_00 = ((SDLK_KP_00 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_000 = ((SDLK_KP_000 ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_THOUSANDSSEPARATOR = ((SDLK_THOUSANDSSEPARATOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_DECIMALSEPARATOR = ((SDLK_DECIMALSEPARATOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CURRENCYUNIT = ((SDLK_CURRENCYUNIT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CURRENCYSUBUNIT = ((SDLK_CURRENCYSUBUNIT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_LEFTPAREN = ((SDLK_KP_LEFTPAREN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_RIGHTPAREN = ((SDLK_KP_RIGHTPAREN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_LEFTBRACE = ((SDLK_KP_LEFTBRACE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_RIGHTBRACE = ((SDLK_KP_RIGHTBRACE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_TAB = ((SDLK_KP_TAB ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_BACKSPACE = ((SDLK_KP_BACKSPACE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_A = ((SDLK_KP_A ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_B = ((SDLK_KP_B ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_C = ((SDLK_KP_C ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_D = ((SDLK_KP_D ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_E = ((SDLK_KP_E ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_F = ((SDLK_KP_F ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_XOR = ((SDLK_KP_XOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_POWER = ((SDLK_KP_POWER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_PERCENT = ((SDLK_KP_PERCENT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_LESS = ((SDLK_KP_LESS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_GREATER = ((SDLK_KP_GREATER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_AMPERSAND = ((SDLK_KP_AMPERSAND ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_DBLAMPERSAND = ((SDLK_KP_DBLAMPERSAND ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_VERTICALBAR = ((SDLK_KP_VERTICALBAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_DBLVERTICALBAR = ((SDLK_KP_DBLVERTICALBAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_COLON = ((SDLK_KP_COLON ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_HASH = ((SDLK_KP_HASH ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_SPACE = ((SDLK_KP_SPACE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_AT = ((SDLK_KP_AT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_EXCLAM = ((SDLK_KP_EXCLAM ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMSTORE = ((SDLK_KP_MEMSTORE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMRECALL = ((SDLK_KP_MEMRECALL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMCLEAR = ((SDLK_KP_MEMCLEAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMADD = ((SDLK_KP_MEMADD ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMSUBTRACT = ((SDLK_KP_MEMSUBTRACT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMMULTIPLY = ((SDLK_KP_MEMMULTIPLY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_MEMDIVIDE = ((SDLK_KP_MEMDIVIDE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_PLUSMINUS = ((SDLK_KP_PLUSMINUS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_CLEAR = ((SDLK_KP_CLEAR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_CLEARENTRY = ((SDLK_KP_CLEARENTRY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_BINARY = ((SDLK_KP_BINARY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_OCTAL = ((SDLK_KP_OCTAL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_DECIMAL = ((SDLK_KP_DECIMAL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KP_HEXADECIMAL = ((SDLK_KP_HEXADECIMAL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_LCTRL = ((SDLK_LCTRL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_LSHIFT = ((SDLK_LSHIFT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_LALT = ((SDLK_LALT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_LGUI = ((SDLK_LGUI ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RCTRL = ((SDLK_RCTRL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RSHIFT = ((SDLK_RSHIFT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RALT = ((SDLK_RALT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_RGUI = ((SDLK_RGUI ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_MODE = ((SDLK_MODE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AUDIONEXT = ((SDLK_AUDIONEXT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AUDIOPREV = ((SDLK_AUDIOPREV ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AUDIOSTOP = ((SDLK_AUDIOSTOP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AUDIOPLAY = ((SDLK_AUDIOPLAY ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AUDIOMUTE = ((SDLK_AUDIOMUTE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_MEDIASELECT = ((SDLK_MEDIASELECT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_WWW = ((SDLK_WWW ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_MAIL = ((SDLK_MAIL ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_CALCULATOR = ((SDLK_CALCULATOR ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_COMPUTER = ((SDLK_COMPUTER ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_SEARCH = ((SDLK_AC_SEARCH ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_HOME = ((SDLK_AC_HOME ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_BACK = ((SDLK_AC_BACK ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_FORWARD = ((SDLK_AC_FORWARD ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_STOP = ((SDLK_AC_STOP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_REFRESH = ((SDLK_AC_REFRESH ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_AC_BOOKMARKS = ((SDLK_AC_BOOKMARKS ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_BRIGHTNESSDOWN = ((SDLK_BRIGHTNESSDOWN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_BRIGHTNESSUP = ((SDLK_BRIGHTNESSUP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_DISPLAYSWITCH = ((SDLK_DISPLAYSWITCH ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KBDILLUMTOGGLE = ((SDLK_KBDILLUMTOGGLE ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KBDILLUMDOWN = ((SDLK_KBDILLUMDOWN ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_KBDILLUMUP = ((SDLK_KBDILLUMUP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_EJECT = ((SDLK_EJECT ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
  VGEINPUT_KEY_SLEEP = ((SDLK_SLEEP ^ SDLK_SCANCODE_MASK) + VGE_REGULAR_KEY_END),
} vge_key;
