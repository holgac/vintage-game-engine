#! /usr/bin/python
import os, stat

def create_test_file():
    tests = open('tests.c', 'w')
    tests.write('/*\n')
    tests.write(' * THIS FILE IS AUTOGENERATED\n')
    tests.write(' * MODIFY setup.py INSTEAD\n')
    tests.write('*/\n')
    tests.write('#include "vge.h"\n')
    files = [f for f in all_c_files()]
    functions = []
    for f in files:
        fp = open(f, 'r')
        for l in fp:
            if l[:7] == 'VGETEST':
                functions.append(l[8:-3])
    for f in functions:
        tests.write('void ' + f + '();\n')
    tests.write('''
void expect(int result, char *errormsg)
{
	if(!result) {
		printf("%s\\n", errormsg);
	}
}
''')
    tests.write('void run_tests()\n')
    tests.write('{\n')
    tests.write('\tstruct vge_stopwatch sw;\n')
    tests.write('\tfloat time_elapsed;\n')
    tests.write('\tvge_stopwatch_reset(&sw);\n')
    for f in functions:
        tests.write('\t' + f + '();\n')
    tests.write('\ttime_elapsed = vge_stopwatch_elapsed(&sw);\n')
    tests.write('\tprintf("Ran ' + str(len(functions)) + ' tests in %2.3f\\n", time_elapsed);\n')
    tests.write('}\n')
    tests.write('int main(int argc, char **argv)\n')
    tests.write('{\n')
    tests.write('\tif(argc>1 && strcmp(argv[1], "test")==0) {\n')
    tests.write('\t\trun_tests();\n')
    tests.write('\t} else {\n')
    tests.write('\t\tprintf("Running game_main()...\\n");\n')
    tests.write('\t\tgame_main(argc, argv);\n')
    tests.write('\t}\n')
    tests.write('\treturn 0;\n')
    tests.write('}\n')

def all_c_files(path='./tests'):
    files = os.listdir(path)
    for f in files:
        fpath = os.path.join(path, f)
        st_mode = os.stat(fpath).st_mode
        if stat.S_ISDIR(st_mode):
            for cf in all_c_files(fpath):
                yield cf
        elif stat.S_ISREG(st_mode) and f[-2:] == '.c':
            yield fpath
    raise StopIteration

create_test_file()
